//Autogenerated from Permissions.tt
using System.ComponentModel;
using BlazorBoilerplate.Localization;

namespace BlazorBoilerplate.Infrastructure.AuthorizationDefinitions
{
    public static class Permissions
    {
        #region Admin
        public static class User
        {
            [LocalizedDescription("CreateUserPermission", typeof(Strings))]
            public const string Create = "User.Create";
            [LocalizedDescription("UpdateUserPermission", typeof(Strings))]
            public const string Update = "User.Update";
            [LocalizedDescription("ReadUserPermission", typeof(Strings))]
            public const string Read = "User.Read";
            [LocalizedDescription("DeleteUserPermission", typeof(Strings))]
            public const string Delete = "User.Delete";
        }
        public static class Role
        {
            [LocalizedDescription("CreateRolePermission", typeof(Strings))]
            public const string Create = "Role.Create";
            [LocalizedDescription("UpdateRolePermission", typeof(Strings))]
            public const string Update = "Role.Update";
            [LocalizedDescription("ReadRolePermission", typeof(Strings))]
            public const string Read = "Role.Read";
            [LocalizedDescription("DeleteRolePermission", typeof(Strings))]
            public const string Delete = "Role.Delete";
        }
        public static class Client
        {
            [LocalizedDescription("CreateClientPermission", typeof(Strings))]
            public const string Create = "Client.Create";
            [LocalizedDescription("UpdateClientPermission", typeof(Strings))]
            public const string Update = "Client.Update";
            [LocalizedDescription("ReadClientPermission", typeof(Strings))]
            public const string Read = "Client.Read";
            [LocalizedDescription("DeleteClientPermission", typeof(Strings))]
            public const string Delete = "Client.Delete";
        }
        public static class ApiResource
        {
            [LocalizedDescription("CreateApiResourcePermission", typeof(Strings))]
            public const string Create = "ApiResource.Create";
            [LocalizedDescription("UpdateApiResourcePermission", typeof(Strings))]
            public const string Update = "ApiResource.Update";
            [LocalizedDescription("ReadApiResourcePermission", typeof(Strings))]
            public const string Read = "ApiResource.Read";
            [LocalizedDescription("DeleteApiResourcePermission", typeof(Strings))]
            public const string Delete = "ApiResource.Delete";
        }
        public static class IdentityResource
        {
            [LocalizedDescription("CreateIdentityResourcePermission", typeof(Strings))]
            public const string Create = "IdentityResource.Create";
            [LocalizedDescription("UpdateIdentityResourcePermission", typeof(Strings))]
            public const string Update = "IdentityResource.Update";
            [LocalizedDescription("ReadIdentityResourcePermission", typeof(Strings))]
            public const string Read = "IdentityResource.Read";
            [LocalizedDescription("DeleteIdentityResourcePermission", typeof(Strings))]
            public const string Delete = "IdentityResource.Delete";
        }
        public static class Tenant
        {
            [LocalizedDescription("CreateTenantPermission", typeof(Strings))]
            public const string Create = "Tenant.Create";
            [LocalizedDescription("UpdateTenantPermission", typeof(Strings))]
            public const string Update = "Tenant.Update";
            [LocalizedDescription("ReadTenantPermission", typeof(Strings))]
            public const string Read = "Tenant.Read";
            [LocalizedDescription("DeleteTenantPermission", typeof(Strings))]
            public const string Delete = "Tenant.Delete";
        }
        #endregion
    }
}